"use strict";define("Build/Extensions/AzureRepos",["require","exports","Build/Designer/RepositorySelector","Tfs/Platform/Page","VSS/Core/Util/String","VSS/Platform/Layout","react","VSSUI/MessageCard"],function(e,t,r,o,s,i,a,n){var p,c;p=t.Resources={},Object.defineProperty(t,"__esModule",{value:!0}),t.Resources.AcquisitionTileSubTitle="Free private Git repositories, pull requests, and code search",t.Resources.AcquisitionTileTitle="Azure Repos",t.Resources.AllProjects="All projects",function(e){c=t.RepositorySelection={},Object.defineProperty(t,"__esModule",{value:!0});class a extends r.RepositorySelector{constructor(e,t){super(e,t),this.state=Object.assign({},this.state,{resultSet:this.state.projectId})}getClassName(e){return e+" azure-repos"}getFilterItems(){const e=[{key:this.state.projectId,displayName:this.state.projectName}],t=o.getTFSPageData(this.context.pageContext);return t&&t.project&&2!==t.project.visibility&&e.push({key:"all",displayName:p.AllProjects}),e}getRepositories(e,t,r,o,s){const i={filter:r},a=this.context.pageContext.getService("IVssContributionService");return a.getDataAsync("ms.vss-build-web.azure-repos-repositories-data-provider",i).then(e=>a.getContributionAsync("ms.vss-code-web.common-content").then(()=>{const t=this.context.pageContext.getService("IVCNavigationService"),r=e&&e.repositories||[],o=r[0]&&r[0].projectId,s=!!r.find(e=>e.projectId!==o);return{continuationToken:"",pageLength:r.length,totalPageCount:1,repositories:r.map(e=>this.repoInfoToSourceRepo(e,s,t))}}))}getRepositoryIconClass(){return"gitRepoIcon"}compareRepositories(e,t){const r="true"===e.properties.isFavorite.toLowerCase(),o="true"===t.properties.isFavorite.toLowerCase();return r&&!o?-1:!r&&o?1:s.localeIgnoreCaseComparer(e.fullName||e.name,t.fullName||t.name)}repoInfoToSourceRepo(e,t,r){const o={isFork:String(e.isFork),isFavorite:String(e.isFavorite)},s={id:e.id,name:e.name,fullName:(t?e.projectName+"/":"")+e.name,defaultBranch:e.defaultBranch,properties:o,url:r.getRepositoryUrl(e.name,e.projectName)};return e.projectId!==this.state.projectId&&(s.properties.repositoryProjectId=e.projectId),s}}t.RepositorySelection.RepositorySelection=a,i.Components.add("azure-repos-repository-selection",a)}(),function(e){t.AzureReposWizard={},Object.defineProperty(t,"__esModule",{value:!0});i.Components.add("azure-repos-wizard",class extends i.VssComponent{constructor(e,t){super(e,t),this._onErrorMessage=(e=>{this.setState({errorMessage:e})}),this._onSelectRepository=((e,t)=>{this.setState({repositoryId:e.id});const r={repositoryId:e.id,repositoryName:e.name,branch:e.defaultBranch,repositoryUrl:e.url};e.properties&&e.properties.repositoryProjectId&&(r.repositoryProjectId=e.properties.repositoryProjectId),this.props.onComplete(r)}),this._onRepositoryListUpdate=((e,t)=>{this.props.onUpdate(e,t)}),this.state=this._getState(e)}render(){return a.createElement(a.Fragment,null,this.state.errorMessage&&a.createElement(n.MessageCard,{className:"azure-repos-wizard-error",severity:"Error"},this.state.errorMessage),this._renderStep())}componentWillReceiveProps(e){this.setState(this._getState(e))}_renderStep(){return a.createElement(c.RepositorySelection,{onSelectRepository:this._onSelectRepository,connectionId:"",sourceProvider:this.props.wizardState.sourceProvider,onRepositoryListUpdate:this._onRepositoryListUpdate,onTTI:this.props.onTTI,onErrorMessage:this._onErrorMessage})}_getState(e){return{repositoryId:e.wizardState.repositoryId}}})}()},["Resources","RepositorySelection","AzureReposWizard"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-build-web.designer-azure-repos"}}));